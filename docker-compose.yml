services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8001:8000"  # Change host port from 8000 to 8001
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "5174:5173"  # Change host port from 5173 to 5174
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true  # Add this for better hot reload support
      - WATCHPACK_POLLING=true     # Add this for better hot reload support
      - VITE_BACKEND_URL=http://localhost:8001  # Update to match backend port

  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"  # Change host port from 5432 to 5433
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  recommender:
    build: 
      context: ./recommender
      args:
        TIMEOUT: 1000  # Increase build timeout to 1000 seconds
    container_name: recommender
    ports:
      - "8002:8000"  # Map to different host port
    volumes:
      - ./recommender:/app
      - .recommender/data/model_artifacts:/app/data/model_artifacts  # Mount model artifacts
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - PIP_TIMEOUT=1000  # Increase pip timeout
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres_data: